import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score

# Load the dataset
url = "https://www.kaggle.com/datasets/vjchoudhary7/customer-segmentation-tutorial-in-python"
df = pd.read_csv(url)

# Assuming the relevant features for clustering are 'Annual Income (k$)' and 'Spending Score (1-100)'
features = df[['Annual Income (k$)', 'Spending Score (1-100)']]

# Standardize the features
scaler = StandardScaler()
features_scaled = scaler.fit_transform(features)

# Determine the optimal number of clusters using the Elbow Method or Silhouette Score
# For simplicity, let's assume the optimal number of clusters is known (you may need to experiment)
k = 5

# Apply K-means clustering
kmeans = KMeans(n_clusters=k, random_state=42)
df['Cluster'] = kmeans.fit_predict(features_scaled)

# Evaluate the model (Silhouette Score)
silhouette_avg = silhouette_score(features_scaled, df['Cluster'])
print(f'Silhouette Score: {silhouette_avg}')

# Visualize the clusters
plt.scatter(features['Annual Income (k$)'], features['Spending Score (1-100)'], c=df['Cluster'], cmap='viridis')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.title('Customer Segmentation using K-means Clustering')
plt.show()
